/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

@font-face{
  font-family:"TT Norms";
  font-weight:bold;
  font-style:normal;
  src:url("../fonts/TTNorms-Bold.eot");
  src:local("TT Norms Bold"), local("TTNorms-Bold"), url("../fonts/TTNorms-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Bold.woff2") format("woff2"), url("../fonts/TTNorms-Bold.woff") format("woff"), url("../fonts/TTNorms-Bold.ttf") format("truetype");
}
@font-face{
  font-family:"TT Norms";
  font-weight:500;
  font-style:normal;
  src:url("../fonts/TTNorms-Medium.eot");
  src:local("TT Norms Medium"), local("TTNorms-Medium"), url("../fonts/TTNorms-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Medium.woff2") format("woff2"), url("../fonts/TTNorms-Medium.woff") format("woff"), url("../fonts/TTNorms-Medium.ttf") format("truetype");
}
@font-face{
  font-family:"TT Norms";
  font-weight:normal;
  font-style:normal;
  src:url("../fonts/TTNorms-Regular.eot");
  src:local("TT Norms Regular"), local("TTNorms-Regular"), url("../fonts/TTNorms-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Regular.woff2") format("woff2"), url("../fonts/TTNorms-Regular.woff") format("woff"), url("../fonts/TTNorms-Regular.ttf") format("truetype");
}
.quote__content, .services__container, .experience__container, .page-header__grid{
  width:min(100% - 40px, 1320px);
  margin-inline:auto;
}

.slider__header.-active{
  background:linear-gradient(90deg, #ef8080 1%, #f0145a 100%);
  -webkit-background-clip:text;
  background-clip:text;
  -webkit-text-fill-color:transparent;
}
*,
*::before,
*::after{
  box-sizing:border-box;
  margin:0;
  padding:0;
}

html{
  font-family:"TT Norms", sans-serif;
  font-size:16px;
}

a{
  text-decoration:none;
  color:#24a3ff;
}

.page-header{
  position:relative;
  background:linear-gradient(42deg, #323264 15%, #323264 51%, #7a425e 88%);
}
.page-header::before{
  content:"";
  background:url(../img/Frame2.svg);
  background-repeat:no-repeat;
  background-position:50% 110%;
  background-size:86.4vh;
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
}
.page-header::after{
  content:"";
  background:linear-gradient(to top, #323264 0%, transparent 100%);
  position:absolute;
  top:75%;
  right:0;
  bottom:0;
  left:0;
}
.page-header__grid{
  position:absolute;
  z-index:2;
  top:0;
  right:0;
  left:0;
  display:grid;
  align-items:center;
  gap:10px 20px;
  grid-template-columns:auto 1fr;
}
.page-header__logo{
  grid-area:logo;
}
.page-header__menu{
  grid-area:menu;
}
.page-header__actions{
  grid-area:actions;
}
.page-header__content{
  position:relative;
  display:flex;
  overflow:hidden;
  align-items:center;
  justify-content:center;
  min-height:100vh;
}
.page-header__content-title{
  position:absolute;
  z-index:1;
  top:50%;
  left:50%;
  width:min(100% - 40px, 600px);
  max-width:600px;
  margin:0;
  transform:translate(-50%, -50%);
  text-align:center;
  color:#ffffff;
  font-size:38px;
  font-weight:500;
  line-height:45px;
}
.page-header__content-image{
  transform:translate(4px, 29.2%);
}
.page-header__button{
  position:absolute;
  z-index:2;
  bottom:20px;
  bottom:0;
  left:50%;
  cursor:pointer;
  transform:translateX(-50%);
}

.menu__btn{
  position:relative;
  width:30px;
  height:22.5px;
  margin-left:auto;
  cursor:pointer;
  transition:0.5s ease-in-out;
  transform:rotate(0deg);
}
.menu__btn-row{
  position:absolute;
  left:0;
  display:block;
  width:100%;
  height:3px;
  transition:0.25s ease-in-out;
  transform:rotate(0deg);
  opacity:1;
  border-radius:3px;
  background:#ffffff;
}
.menu__btn-row:nth-child(1){
  top:0;
}
.menu__btn-row:nth-child(2){
  top:9px;
}
.menu__btn-row:nth-child(3){
  top:18px;
}
.menu__btn.-active span:nth-child(1){
  top:9px;
  transform:rotate(135deg);
}
.menu__btn.-active span:nth-child(2){
  left:-30px;
  opacity:0;
}
.menu__btn.-active span:nth-child(3){
  top:9px;
  transform:rotate(-135deg);
}
.menu__list{
  display:flex;
  justify-content:flex-end;
  gap:15px;
  margin:0;
  padding:0;
  list-style:none;
}
.menu__link{
  display:block;
  padding:0.25em 0;
  color:#ffffff;
  font-size:18px;
}

.actions{
  display:flex;
  align-items:center;
  justify-content:flex-end;
  gap:20px;
}
.actions__languages{
  display:flex;
  letter-spacing:1px;
  font-size:12px;
  font-weight:700;
  gap:2px;
}
.actions__languages-link{
  padding:5px 6px;
  border-radius:8px;
}
.actions__languages-link.-active{
  color:#ffffff;
  background-color:#f0145a;
}
.actions__locations-link{
  font-style:normal;
}
.actions__phones-link{
  font-weight:700;
}

.experience{
  padding-top:80px;
  padding-bottom:80px;
  background-color:#323264;
}
.slider{
  display:flex;
}
.slider__headers{
  position:relative;
  display:flex;
  flex-basis:0;
  flex-direction:column;
  flex-grow:2;
  gap:20px;
}
.slider__header{
  position:relative;
  user-select:none;
  color:#b3b3ba;
}
.slider__header.-active{
  display:block;
}
.slider__notes{
  display:flex;
  align-items:center;
  flex-basis:0;
  flex-grow:3;
  color:#ffffff;
}
.slider__note{
  position:absolute;
  z-index:-9999;
  max-width:600px;
  opacity:0;
}
.slider__note.-active{
  position:static;
  z-index:inherit;
  opacity:1;
}
.slider__title{
  font-weight:500;
  line-height:1.1875;
}
.slider__description{
  font-weight:normal;
  line-height:1.43;
}
.slider__indicators{
  display:flex;
  justify-content:center;
  gap:14px;
}
.slider__indicator{
  width:16px;
  height:16px;
  opacity:0.2;
  border-radius:8px;
  background-color:#24a3ff;
}
.slider__indicator.-active{
  opacity:1;
}

.services{
  position:relative;
  border-radius:0 0 12px 12px;
  background:linear-gradient(215deg, #323264 12%, #323264 57.17%, #643e72 87%);
}
.services::before{
  position:absolute;
  top:100%;
  right:40px;
  left:40px;
  height:20px;
  content:"";
  border-radius:0 0 12px 12px;
  background-color:#e7e7f2;
}
.services::after{
  position:absolute;
  top:100%;
  right:20px;
  left:20px;
  height:10px;
  content:"";
  border-radius:0 0 12px 12px;
  background-color:#cacadb;
}
.services__page-link{
  letter-spacing:1px;
  text-transform:uppercase;
  color:rgba(255, 255, 255, 0.5);
  font-size:14px;
}
.services__page-link::after{
  position:absolute;
  top:4px;
  display:inline-block;
  width:12px;
  height:12px;
  content:"";
  background-image:url(../img/liinkarrow.svg);
}
.services__title{
  background:linear-gradient(90.13deg, #f0145a 0.84%, #ef8080 99.96%);
  -webkit-background-clip:text;
  background-clip:text;
  font-size:42px;
  line-height:50px;
  -webkit-text-fill-color:transparent;
}
.services__grig{
  display:grid;
  column-gap:40px;
}

.service-item{
  min-height:260px;
  gap:17px;
}

.service-item__title{
  color:#24a3ff;
  font-size:24px;
  font-weight:400;
  line-height:1.16;
  grid-area:ttl;
}
.service-item__description{
  color:#ffffff;
  font-size:18px;
  line-height:1.44;
  grid-area:dsc;
}
.service-item__icon{
  order:-1;
  grid-area:icn;
}

.quote{
  margin-top:60px;
  margin-bottom:40px;
  border-radius:12px;
}
.quote__title{
  position:absolute;
  overflow:hidden;
  clip:rect(0 0 0 0);
  width:1px;
  height:1px;
  margin:-1px;
  padding:0;
  border:0;
}
.quote__content{
  display:flex;
  border-radius:12px;
  background-color:#f5f5fa;
}
.quote__links{
  position:relative;
  letter-spacing:1px;
  text-transform:uppercase;
  font-size:14px;
  font-weight:700;
  line-height:1.21;
}
.quote__link::after{
  position:absolute;
  top:2.5px;
  left:88px;
  width:9px;
  height:12px;
  content:"";
  background-image:url(../img/linkarrowblue.svg);
}
.quote__description{
  display:flex;
  flex-direction:column;
  padding:40px;
}
.quote__description-author{
  display:flex;
  flex-direction:column;
  gap:5px;
}
.quote__description-text{
  max-width:827px;
  margin-bottom:20px;
  background:linear-gradient(90.13deg, #f0145a 0.84%, #ef8080 99.96%);
  -webkit-background-clip:text;
  background-clip:text;
  font-size:42px;
  font-weight:700;
  line-height:1.19;
  -webkit-text-fill-color:transparent;
  text-fill-color:transparent;
}
.quote__description-signature{
  display:flex;
}
.quote__description-name{
  color:#b3b3ba;
  font-size:18px;
  font-weight:400;
  font-style:normal;
  line-height:1.17;
}
.quote__description-position{
  color:#b3b3ba;
  font-size:16px;
  font-weight:400;
  font-style:normal;
  line-height:1.375;
}
.quote__pictures{
  order:-1;
}
.quote__slider-indicators{
  display:flex;
  justify-content:center;
  margin-top:20px;
  gap:14px;
}
.quote__slider-indicator{
  width:16px;
  height:16px;
  opacity:0.2;
  border-radius:8px;
  background-color:#24a3ff;
}
.quote__slider-indicator.-active{
  opacity:1;
}
.quote__image-mobile{
  border-radius:30px;
}
@media (min-width: 576px){
  .page-header__grid{
    padding-top:50px;
    gap:10px 20px;
    grid-template-areas:"logo actions" "logo menu";
  }
  .actions{
    justify-content:flex-end;
  }
  .actions a{
    color:#ffffff;
  }
}
@media (min-width: 768px){
  .menu__btn{
    display:none;
  }
  .slider__description{
    margin-bottom:20px;
    font-size:21px;
  }
  .slider__indicators{
    display:none;
  }
  .services__grig{
    padding:68px 0 80px 0;
    grid-template-columns:repeat(3, 1fr);
    grid-template-rows:1fr 1fr;
    row-gap:30px;
  }
  .service-item{
    display:flex;
    flex-direction:column;
  }
}
@media (min-height: 800px){
  .page-header__content-image{
    height:62vh;
  }
}
@media (min-width: 992px){
  .slider{
    gap:80px;
  }
  .slider__headers{
    align-items:flex-end;
  }
  .slider__headers::after{
    position:absolute;
    right:-42px;
    width:4px;
    height:100%;
    content:"";
    background-color:#e6e6f0;
  }
  .slider__header{
    text-align:right;
    font-size:42px;
    line-height:1.19;
  }
  .slider__header.-active::after{
    position:absolute;
    z-index:1;
    top:0;
    right:-42px;
    bottom:0;
    width:4px;
    content:"";
    background-color:#f0145a;
  }
  .slider__title{
    margin-bottom:20px;
    font-size:32px;
  }
  .quote__image-mobile{
    display:none;
  }
}
@media (max-width: 991.8px){
  .actions__socials{
    display:none;
  }
  .slider{
    flex-direction:column;
  }
  .slider__header{
    display:none;
    width:min-content;
    margin-bottom:10px;
    white-space:nowrap;
    letter-spacing:1px;
    text-transform:uppercase;
    font-size:14px;
    line-height:1.19;
    overflow:hidden;
    max-width:100%;
    white-space:nowrap;
    text-overflow:ellipsis;
  }
  .quote{
    margin-top:40px;
  }
  .quote__description{
    padding:20px;
  }
  .quote__description-text{
    font-size:32px;
    line-height:1.18;
  }
  .quote__description-signature{
    flex-direction:row-reverse;
    justify-content:flex-end;
    gap:10px;
    align-items:center;
  }
  .quote__pictures{
    display:none;
  }
}
@media (max-width: 991.8px) and (min-width: 768px){
  .slider__title{
    margin-bottom:20px;
    font-size:28px;
  }
}
@media (max-width: 767.8px){
  .page-header::before{
    display:none;
  }
  .menu__list{
    position:absolute;
    top:100%;
    right:0;
    display:none;
    padding:30px;
    text-align:right;
    background-color:#323264;
    box-shadow:-5px 5px 10px #000000;
  }
  .actions__locations-link{
    display:none;
  }
  .slider__title{
    margin-bottom:15px;
    font-size:22px;
  }
  .slider__description{
    margin-bottom:20px;
    font-size:18px;
  }
  .services__title{
    padding-bottom:20px;
    font-size:32px;
    line-height:38px;
  }
  .services__grig{
    padding-bottom:20px;
    column-gap:10px;
    grid-template-columns:1fr;
    row-gap:40px;
  }
  .service-item{
    display:grid;
    align-items:center;
    min-height:168px;
    gap:10px;
    grid-template-areas:"icn ttl" "dsc dsc";
    grid-template-columns:64px 1fr;
  }
  .service-item__title{
    font-size:18px;
    line-height:1.16;
  }
  .service-item__image{
    width:64px;
  }
}
@media (max-width: 575.8px){
  .page-header__grid{
    padding-top:20px;
    gap:20px;
    grid-template-areas:"actions actions" "logo menu";
  }
  .actions{
    justify-content:space-between;
  }
  .actions a{
    color:#b3b3ba;
  }
  .logo__image{
    width:88px;
  }
}
@media (max-width: 419.8px){
  .experience{
    padding-bottom:45px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */